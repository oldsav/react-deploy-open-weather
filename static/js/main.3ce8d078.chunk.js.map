{"version":3,"sources":["components/Context.js","components/LocationList.js","components/Details.js","components/Service.js","components/App.js","index.js"],"names":["Context","React","createContext","LocationList","props","useContext","renderCities","PLACES","className","Details","activeItem","renderWeather","place","wetherService","getWeather","lat","lon","a","getResource","res","url","fetch","json","App","service","useState","setLat","setLon","setPlace","setActiveItem","useEffect","then","item","Provider","value","arr","main","current","weather","icon","src","alt","clouds","pressure","wind_speed","temp","toFixed","name","map","city","onClick","href","ReactDOM","render","document","getElementById"],"mappings":"yMACaA,EAAUC,IAAMC,gBCWdC,MATf,SAAsBC,GAAQ,IAAD,EACKH,IAAMI,WAAWL,GAAzCM,EADmB,EACnBA,aAAaC,EADM,EACNA,OACrB,OACE,yBAASC,UAAU,gBAAnB,SACE,oBAAIA,UAAU,YAAd,SAA2BF,EAAaC,QCQ/BE,MAXf,SAAiBL,GAAQ,IAAD,EACsBH,IAAMI,WAAWL,GAApDU,EADa,EACbA,WAAWC,EADE,EACFA,cAAeC,EADb,EACaA,MACjC,OACI,sBAAKJ,UAAU,oBAAf,UACI,yCACA,6BAAKE,IACAA,EAAYC,EAAcC,GAAO,qD,qCCV7BC,E,4DAKnBC,W,uCAAa,WAAOC,EAAIC,GAAX,eAAAC,EAAA,sEACO,EAAKC,YAAL,8DACuCH,EADvC,gBACkDC,EADlD,iEADP,cACLG,EADK,yBAIJA,GAJI,2C,yJAJKC,G,uFACEC,MAAMD,G,cAAlBD,E,gBACOA,EAAIG,O,iJC8ENC,MA1Ef,WACE,IAAIC,EAAU,IAAIX,EADL,EAQSZ,IAAMwB,SAAS,GARxB,mBAQNV,EARM,KAQDW,EARC,OASSzB,IAAMwB,SAAS,GATxB,mBASNT,EATM,KASDW,EATC,OAUa1B,IAAMwB,SAAS,MAV5B,mBAUNb,EAVM,KAUCgB,EAVD,OAWuB3B,IAAMwB,SAAS,MAXtC,mBAWNf,EAXM,KAWMmB,EAXN,KA8Db,OAJA5B,IAAM6B,WAAU,YA9CG,SAACf,EAAKC,GACvBQ,EAAQV,WAAWC,EAAKC,GAAKe,MAAK,SAACC,GACjCJ,EAASI,MA6CXlB,CAAWC,EAAKC,KACf,CAACN,IAGF,cAACV,EAAQiC,SAAT,CACEC,MAAO,CAAEvB,cA/CS,SAACwB,GACrB,IAAIC,EAAOD,EAAIE,QAAQC,QAAQ,GAAGF,KAC7BG,EAFwB,YAEhBJ,EAAIE,QAAQC,QAFI,MAG7B,GAAIH,EACF,OACE,qBAAI3B,UAAU,iBAAd,UACE,qBACEgC,IAAG,2CAAsCD,EAAKA,KAA3C,WACHE,IAAI,QAEN,qBAAIjC,UAAU,OAAd,wBAAiC4B,KACjC,qBAAI5B,UAAU,OAAd,qBAA8B2B,EAAIE,QAAQK,OAA1C,OACA,qBAAIlC,UAAU,OAAd,uBAAgC2B,EAAIE,QAAQM,SAA5C,UACA,qBAAInC,UAAU,OAAd,yBAAkC2B,EAAIE,QAAQO,WAA9C,SACA,qBAAIpC,UAAU,OAAd,0BACgB2B,EAAIE,QAAQQ,KAD5B,WAEIV,EAAIE,QAAQQ,KAAO,QAAQC,QAAQ,GAFvC,gBAiCoBvC,OA9Db,CACb,CAAEwC,KAAM,SAAUhC,IAAK,UAAWC,IAAK,WACvC,CAAE+B,KAAM,QAAShC,IAAK,UAAWC,IAAK,WACtC,CAAE+B,KAAM,cAAehC,IAAK,SAAUC,IAAK,UAC3C,CAAE+B,KAAM,aAAchC,IAAK,UAAWC,IAAK,YA0DTJ,QAAON,aAzBtB,SAAC6B,GACpB,OAAOA,EAAIa,KAAI,SAACC,GACd,OACE,oBACEzC,UACEE,IAAeuC,EAAKF,KAAO,mBAAqB,YAGlDG,QAAS,WACPrB,EAAcoB,EAAKF,MACnBrB,EAAOuB,EAAKlC,KACZY,EAAOsB,EAAKjC,MARhB,SAWE,mBAAGmC,KAAK,IAAR,SAAaF,EAAKF,QAPbE,EAAKF,UAkBuCrC,cADvD,SAGE,sBAAKF,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCtER4C,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.3ce8d078.chunk.js","sourcesContent":["import React from 'react';\nexport const Context = React.createContext();","import React from \"react\";\nimport { Context } from \"./Context\";\n\nfunction LocationList(props) {\n  const { renderCities,PLACES } = React.useContext(Context);\n  return (\n    <section className=\"loc-container\">\n      <ul className=\"list-city\">{renderCities(PLACES)}</ul>\n    </section>\n  );\n}\n\nexport default LocationList;\n","import React from 'react';\nimport {Context} from \"./Context\";\n\n\nfunction Details(props) {\n    const {activeItem,renderWeather, place} = React.useContext(Context);\n    return (\n        <div className=\"weather-container\">\n            <h1>Weather</h1>\n            <h3>{activeItem}</h3>\n                {activeItem? renderWeather(place):<h2>Select location</h2>}\n        </div>\n    );\n}\n\nexport default Details;","export default class wetherService {\n  async getResource(url) {\n    const res = await fetch(url);\n    return await res.json();\n  }\n  getWeather = async (lat,lon) => {\n    const res = await this.getResource(\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=hourly,daily&appid=12fd4da75395cb6056f98eb17ae910b5`\n    );\n    return res;\n  };\n}\n","import React from \"react\";\nimport LocationList from \"./LocationList\";\nimport Details from \"./Details\";\nimport { Context } from \"./Context\";\nimport wetherService from \"./Service\";\n\n\nfunction App() {\n  let service = new wetherService();\n  const PLACES = [\n    { name: \"Moscow\", lat: 55.755825, lon: 37.617298 },\n    { name: \"Kazan\", lat: 55.830433, lon: 49.066082 },\n    { name: \"Yoshkar-Ola\", lat: 56.63189, lon: 47.89793 },\n    { name: \"Cheboksary\", lat: 56.134837, lon: 47.243472 },\n  ];\n  const [lat, setLat] = React.useState(0);\n  const [lon, setLon] = React.useState(0);\n  const [place, setPlace] = React.useState(null);\n  const [activeItem, setActiveItem] = React.useState(null);\n  const getWeather = (lat, lon) => {\n    service.getWeather(lat, lon).then((item) => {\n      setPlace(item);\n    });\n  };\n  const renderWeather = (arr) => {\n    let main = arr.current.weather[0].main;\n    let [icon] = arr.current.weather;\n    if (arr) {\n      return (\n        <ul className=\"weather-detail\">\n          <img\n            src={`http://openweathermap.org/img/wn/${icon.icon}@2x.png`}\n            alt=\"img\"\n          ></img>\n          <li className=\"item\">Condition: {main}</li>\n          <li className=\"item\">Clouds: {arr.current.clouds}%</li>\n          <li className=\"item\">Pressure: {arr.current.pressure} hPa</li>\n          <li className=\"item\">Wind speed: {arr.current.wind_speed}m/s</li>\n          <li className=\"item\">\n            Temperature: {arr.current.temp}&#x212a;/\n            {(arr.current.temp - 273.15).toFixed(1)}&#x2103;\n          </li>\n          </ul>\n      );\n    }\n  };\n  const renderCities = (arr) => {\n    return arr.map((city) => {\n      return (\n        <li\n          className={\n            activeItem === city.name ? \"item-city active\" : \"item-city\"\n          }\n          key={city.name}\n          onClick={() => {\n            setActiveItem(city.name);\n            setLat(city.lat);\n            setLon(city.lon);\n          }}\n        >\n          <a href=\"#\">{city.name}</a>\n        </li>\n      );\n    });\n  };\n  React.useEffect(() => {\n    getWeather(lat, lon);\n  }, [activeItem]);\n\n  return (\n    <Context.Provider\n      value={{ renderWeather, PLACES, place, renderCities, activeItem }}\n    >\n      <div className=\"App\">\n        <LocationList />\n        <Details />\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\n\nReactDOM.render(\n\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}